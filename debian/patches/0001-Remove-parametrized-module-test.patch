Description:  Remove parametrized module test
Forwarded: not-needed
Origin: upstream, https://github.com/eproxus/meck/commit/b0d25a15c372d77625a7bbc9d2891fc008b1681d
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=713530
Author: oseph Wayne Norton <norton@alum.mit.edu>

From 69519ca8b5d662ed5e560be336e48307094d6648 Mon Sep 17 00:00:00 2001
From: Joseph Wayne Norton <norton@alum.mit.edu>
Date: Mon, 1 Jul 2013 12:34:27 +0900
Subject: [PATCH] Remove parametrized module test

Erlang/OTP R16, coming soon, will do away with parameterized modules
(see Issue 4 under http://www.erlang.org/news/35 for details).

Modifed by Nobuhiro Iwamatsu for 0.7.2.

---
 test/meck_test_parametrized_module.erl |    7 -------
 test/meck_tests.erl                    |   26 --------------------------
 2 files changed, 33 deletions(-)
 delete mode 100644 test/meck_test_parametrized_module.erl

diff --git a/test/meck_test_parametrized_module.erl b/test/meck_test_parametrized_module.erl
deleted file mode 100644
index 1912679..0000000
--- a/test/meck_test_parametrized_module.erl
+++ /dev/null
@@ -1,7 +0,0 @@
--module(meck_test_parametrized_module, [Var1, Var2]).
--export([which/0, var1/0, var2/0]).
-
-which() -> original.
-
-var1() -> {original, Var1}.
-var2() -> {original, Var2}.
diff --git a/test/meck_tests.erl b/test/meck_tests.erl
index 9e01952..3cc22c9 100644
--- a/test/meck_tests.erl
+++ b/test/meck_tests.erl
@@ -851,32 +851,6 @@ cannot_expect_bif_or_autogenerated_test() ->
                  meck:expect(unicode, module_info, 0, doh)),
     ?assertEqual(ok, meck:unload(unicode)).
 
-meck_parametrized_module_test() ->
-    ?assertEqual(ok, meck:new(meck_test_parametrized_module)),
-    ?assertEqual(ok, meck:expect(meck_test_parametrized_module, new,
-                                 fun(V1, V2) ->
-                                     {meck_test_parametrized_module, V1, V2}
-                                 end)),
-    ?assertEqual(ok, meck:expect(meck_test_parametrized_module, which, 1, mecked)),
-    Object = meck_test_parametrized_module:new(var1, var2),
-    ?assertEqual(mecked, Object:which()),
-    ?assertEqual(ok, meck:unload(meck_test_parametrized_module)).
-
-meck_parametrized_module_passthrough_test() ->
-    ?assertEqual(ok, meck:new(meck_test_parametrized_module, [passthrough])),
-    ?assertEqual(ok, meck:expect(meck_test_parametrized_module, new,
-                                 fun(V1, V2) ->
-                                     {meck_test_parametrized_module, V1, V2}
-                                 end)),
-    ?assertEqual(ok, meck:expect(meck_test_parametrized_module, var2,
-                                 fun({_, _Var1, Var2} = _This) ->
-                                     {mecked, Var2}
-                                 end)),
-    Object = meck_test_parametrized_module:new(var1, var2),
-    ?assertEqual({original, var1}, Object:var1()),
-    ?assertEqual({mecked, var2}, Object:var2()),
-    ?assertEqual(ok, meck:unload(meck_test_parametrized_module)).
-
 %%==============================================================================
 %% Internal Functions
 %%==============================================================================
-- 
1.7.10.4

